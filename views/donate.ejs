<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Donate</title>
    <link rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Material+Symbols+Outlined:opsz,wght,FILL,GRAD@24,400,0,0" />
    <link rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Material+Symbols+Outlined:opsz,wght,FILL,GRAD@24,400,0,0" />
    <style>
        #map {
            width: 50vw;
            min-width: 400px;
            height: 25vw;
            min-height: 300px;
            border-radius: 1vw;
        }
/*-------------------------------------------------------------------------------------------------------------------*/
        input[type=number]::-webkit-inner-spin-button, 
        input[type=number]::-webkit-outer-spin-button { 
            -webkit-appearance: none;
            appearance: none; 
        }

        /* Firefox */
        input[type=number] {
            -moz-appearance: textfield;
        }
        html {
            scroll-behavior: smooth
        }

        @keyframes card {
            from {
                transform: translate3d(-10rem, 25rem, 0);
                opacity: 0;
            }

            to {
                transform: translate3d(0, 0, 0);
                opacity: 1;
            }
        }
        ul {
            list-style: none;
        }

        a {
            text-decoration: none;
        }
        .content{
            text-align: center;
        }
        .content>h1{
            font-size: 7dvh;
            color: rgb(73, 73, 73);
            margin-bottom: 2dvh;
        }
        /*for chrome*/
        body::-webkit-scrollbar {
            display: none;
        }

        /*for firefox and edge*/
        body {
            -ms-overflow-style: none;
            scrollbar-width: none;
        }

        body {
            margin: 0;
            overflow-x:hidden;
        }

          .header {
            background-color: rgb(223, 249, 217);
            display: flex;
            margin: 0;
            align-items: center;

            box-shadow: 0.5px 0.5px 5px rgb(136, 136, 136);
            position: fixed;
            width: 100%;
            z-index: 800;
            
            top: 0%;
            left: 0%;
            
        }

        


        .header img {
            height: 60px;
            margin-top: 10px;
            margin-bottom: 10px;
            padding-left: 30px;
            padding-right: 10px;
        }

        .header img:hover {
            cursor: pointer;
        }

        .menu-buttons {

            width: 400px;
            display: flex;
            gap: 40px;
            align-items: center;
            width: 60%;
            padding-left: 50px;

        }
        /* .mlink {
            width: 400px;
            display: flex;
            justify-content: center;
            align-items: center;
            padding-left: 80px;
        } */

        .mlink {
            border: 2px solid transparent;
            padding: 12px;
             height: 60%;
            background-color: rgb(125, 228, 125);
            border-radius: 40px;
            width: 100px;
            text-align: center;
            transition: background-color .4s ease-in-out;
           

        }

        .mlink:hover {
            border: 2px solid;

            background-color: transparent;
            color: rgb(28,206,28);
            box-shadow: 0.5px 0.5px 5px rgb(136, 136, 136);
        }

        .mlink:hover>a {
            color: rgb(28,206,28);
        }

        .menu-buttons>a {
            text-decoration: none;
            color: rgb(39, 39, 39);
            padding-top: 30px;
            padding-bottom: 30px;
            font-size: 20px;
            height: 100%;
            width: 90px;
            display: grid;
            place-content: center;
        }

        .menu-buttons>a:hover {
            background-color: rgb(156, 223, 143);
        }

        .mlink a {
            font-size: 20px;
            color: black;
        }.header.back{
            position: inherit;
        }
/*------------------------------------------------------------------------------------------------------>>>>>>>>*/

@keyframes parallax1 {
    from{
        transform: translate3d(0,0,0);
    }to{
        transform: translate3d(0,200px,0);
    }
}
@keyframes parallax2 {
    from{
        transform: translate3d(0,0,0);
    }to{
        transform: translate3d(0,400px,0);
    }
}



        .content{
            background-color: rgba(245, 245, 245, 0.938);
            border-top-left-radius: 2vw;
            border-top-right-radius: 2vw;
            border-bottom-left-radius: 2vw;
            border-bottom-right-radius: 2vw;
        }
        .inv1{
            display: none;
        }
        .inv{
            display: flex;
            flex-direction: column;
            width: 8vw;
        }
        .centre{
            display: flex;
            flex-direction: column;
            align-items: center;
        }
        .content{
            margin: 3dvh 0;
            width:65vw;
            min-width: 400px;
        }
        .first-line{
            display: flex;
            justify-content: center;
            align-items: center;
            gap: 5vw;
        }
        #city{
            text-align: center;
            width: 45vw;
            min-width: 300px;
            border-radius: 13dvh;
            height: 3dvh;
            border: 2px solid  rgb(255, 21, 52);
            background-color: white;
        }
        input[type=city]:focus{
            outline: 1.5px solid  rgb(255, 21, 52);
        }
        #city:hover{
            border: 2.5px solid  rgb(255, 21, 52);
            box-shadow: 0.5px 01px 3px rgb(197, 197, 197);
            transition-property: box-shadow;
            transition-timing-function: ease-in-out;
            transition-duration: 0.1s;
        }
        #submit{
            border-radius: 3dvh;
            background-color: rgb(255, 21, 52);
            color: rgb(255, 255, 255);
            border:2px solid rgb(255, 255, 255);
            padding: 3px 5.5px;
            transition: background-color .4s ease-in-out;
            height: fit-content;
        }#submit:hover{
            background-color: white;
            color: rgb(255, 21, 52);
            border:2px solid rgb(255, 21, 52);
            box-shadow: 0.5px 0.5px 5px rgb(136, 136, 136);
            transition-property: box-shadow;
            transition-timing-function: ease-in-out;
            transition-duration: 0.1s;
    
        }


        .lineOr{
            margin: 0;
            height: 2.5px;
            width:48%;
            background-color: rgb(202, 202, 202);
            margin-top:1dvh ;
        }.Or{
            margin: 0;
            color:  rgb(141, 141, 141);
            font-size: 2dvh;
        }.line-or{
            margin-top:1.5dvh;
            display: flex;
            justify-content: center;
        }

        .second-line{
            margin-top:1.5dvh;
            display: flex;
            justify-content: center;
            gap: 10vw;
            align-items: center;
        }
        #locate{
            text-align: center;
            height:5dvh;width: 15vw;
            font-size: 1.8dvh;
            min-width: 150px;
            display: flex;
            justify-content: center;
            gap: 7%;
            align-items: center;
            background-color: rgb(255, 37, 37);
            border: 2px solid white;
            color: white;
            border-radius: 20px;
            padding-top: 4px;
        }#locate:hover{
            background-color: white;
            color: rgb(255, 21, 52);
            border:2px solid rgb(255, 21, 52);
            box-shadow: 0.5px 0.5px 5px rgb(136, 136, 136);
            transition-property: box-shadow;
            transition-timing-function: ease-in-out;
            transition-duration: 0.5s;
            padding-top: 0;
        }.markBtn:hover{
            color: red;
            height: 90%;
            transition-property: height;
            transition-timing-function: ease-in-out;
            transition-duration: 10s;
        }#distanceMax{
            width: 25vw;
            min-width: 150px;
            border-radius:5dvh ;
            text-align: center;
            height: 3dvh;
            border: 2px solid red;
        }#distanceMax:hover{
            border:2px solid rgb(255, 21, 52);
            box-shadow: 0.5px 0.5px 5px rgb(136, 136, 136);
            transition-property: box-shadow;
            transition-timing-function: ease-in-out;
            transition-duration: 0.5s;
            padding-top: 0;
        }

        .dropdown{
            margin-top:2dvh ;
            display: flex;
            justify-content:start;
            align-items: center;
            margin-left: 3vw;
            gap: 2%;
            width: 15vw;
            min-width: 150px;
        }
        .dropdown>h1{
            font-size: 2.5dvh;
            color: #0f0f0f;
        }
        .dropdownBtn{
            width: 10vw;
            min-width: 100px;
            background-color: white;
            border: 2px solid red;
            border-radius: 2dvh;
            box-shadow: 0.5px 0.5px 5px rgb(136, 136, 136);
            transition-property: box-shadow;
            transition-timing-function: ease-in-out;
            transition-duration: 0.5s;
        }
        .optionsType{
            display: none;
            width: 10vw;
            position: absolute;
            background-color: #f1f1f1;
            min-width: 100px;
            box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
            z-index: 1;
            
        }.optionsType>button{
            background-color: white;
            border: 0px solid red;
            border-radius: 2px;
        }
        .dropdown:hover .optionsType{
            display: flex;
            flex-direction: column;
        }
        .optionsType>button:hover{
            border: 3px dashed red;
        }
        .dropdown:hover .dropdownBtn {
            background-color: white;
            
        }
        @media(max-width:500px){
            #locate{
                font-size:2.5vw;
                padding: 0;
            }
            .dropdown{
                justify-content: center;
            }
            .dropdown>h1{
                font-size:2.5vw;
            }#distanceMax{
                font-size: 2.5vw;
            }
        }
        .table{
            display: flex;
            flex-wrap: wrap;
            margin: 0 1.5vw;
            gap:1vw;
        }
        .card{
            display: flex;
            flex-direction: column;
            width: 42%;
            overflow-y: hidden;
            overflow-x: hidden;
            border: 3px solid red;
            background-color: white;
            padding:3dvh 2vw;
            border-radius: 3vw;
        }
        .card>h1{
            text-align: left;
            font-size: 1.5dvh;
            color: rgb(70, 70, 70);
        }.start{
            font-size:2dvh ;
            margin-right:0.5vw ;
            color: black;
        }
        .card:hover{
            box-shadow: 3px 3px 3px rgb(252, 49, 49);
            box-shadow: 4px 4px 6px rgb(87, 87, 87);
            transform: scale(1.05);
            transition-property: transform;
            transition-timing-function: ease-in-out;
            transition-duration: 0.3s;
        }
        .mapCont{
            margin-top: 2dvh;
            display: flex;
            justify-content: center;
            height: fit-content;
            margin-bottom: 3dvh;
        }
        .curve1{
            position: absolute;
            z-index: -99;
            width: 25vw;
            height:30vw;
            left:3vw;
            border-radius: 63% 37% 49% 51% / 30% 30% 70% 70% ;
            background-color: rgb(159, 231, 255);
        }
        .curve2{
            position: absolute;
            z-index: -100;
            width: 30vw;
            height:30vw;
            top:8vw;
            left:3vw;
            border-radius: 62% 38% 65% 35% / 64% 24% 76% 36%;
            background-color: rgb(159, 255, 196);
            animation: parallax2 ease ;
            animation-timeline: scroll();
        }
        .curve3{
            position: absolute;
            z-index: -100;
            width: 50vw;
            height:40vw;
            top:16vw;
            left:60vw;
            border-radius: 31% 69% 43% 57% / 64% 57% 43% 36%;
            background-color: rgb(255, 252, 68);
        }
        .curve4{
            position: absolute;
            z-index: -99;
            width: 40vw;
            height:45vw;
            top:16vw;
            left:60vw;
            border-radius: 53% 47% 42% 58% / 31% 31% 69% 69%;
            background-color: rgb(255, 131, 82);
            animation: parallax1 ease ;
            animation-timeline: scroll();
        }.curve5{
            position: absolute;
            z-index: -99;
            width: 50vw;
            height:30vw;
            top:40vw;
            left:4vw;
            border-radius: 88% 12% 61% 39% / 61% 23% 77% 39%;
            background-color: rgb(82, 255, 246);
            animation: parallax1 ease ;
            animation-timeline: scroll();
        }.curve6{
            position: absolute;
            z-index: -100;
            width: 60vw;
            height:40vw;
            top:50vw;
            left:4vw;
            border-radius: 49% 51% 33% 67% / 35% 55% 45% 65%;
            background-color: rgb(182, 255, 140);
            transform: rotate(10deg);
            animation: parallax2 ease ;
            animation-timeline: scroll();
        }
        .curve7{
            position: absolute;
            z-index: -99;
            width: 30vw;
            height:35vw;
            top:65vw;
            right: 0;
            border-radius: 100% 0% 0% 100% / 35% 55% 45% 65%;
            background-color: rgb(255, 108, 83);
            animation: parallax1 ease ;
            animation-timeline: scroll();
        }
    </style>
    <script type="module" src="./index.js"></script>
</head>

<body>
    <div class="header">

        <a href="#top"><img src="../public/images/littlehelporg-high-resolution-logo-transparent.png"
                alt="logo/name"></a>
        <div class="menu-buttons">
            <a href="./index.ejs">Home</a>
            <a href="">Blog</a>
            <a href="./suggest.ejs">Suggest</a>
            <a href="#mshift">About</a>
        </div>

        <div class="mlink" >
            <a href="">Contact Us</a>
        </div>
        <!-- <div class="" -->

    </div>
    <div class="header back">
            <a href="#top"><img src="../public/images/littlehelporg-high-resolution-logo-transparent.png"
                alt="logo/name"></a>
        <div class="menu-buttons">
            <a href="./index.ejs">Home</a>
            <a href="">Blog</a>
            <a href="./suggest.ejs">Suggest</a>
            <a href="#mshift">About</a>
        </div>

        <div class="mlink" >
            <a href="">Contact Us</a>
        </div>
    </div>


    <!-- --------------------------------------------------------------------------------------------------------------------------------------------------- -->
    <div class="curve1"></div>
    <div class="curve2"></div>
    <div class="curve3"></div>
    <div class="curve4"></div>
    <div class="curve5"></div>
    <div class="curve6"></div>
    <div class="curve7"></div>
    <div class="curve8"></div>
    <div class="curve9"></div>
    <div class="curve10"></div>
    <div class="centre">
        <div class="content">
            <h1>Donate</h1>
            <div class="first-line">
                <input placeholder="Search Your City" type="city" id="city" />
                <button id="submit"><span class="material-symbols-outlined">
                    search
                    </span></button>
            </div>
            <div class="line-or">
                <div class="lineOr"></div>
                <h1 class="Or">(OR)</h1>
                <div class="lineOr"></div>
            </div>
            <div class="second-line">
                <button id="locate"><span class="material-symbols-outlined markBtn">
                location_on
                    </span><span>Use Current location</span></button>
                <input placeholder="Maximum Distance(in km)" type="number" id="distanceMax" />
            </div>
            <div class="dropdown">
                <h1>Filter:-</h1>
                <div>
                    <button class="dropdownBtn type" id="typeBtn">NONE</button>
                        <div class="optionsType inv1">
                            <button id="any">NONE</button>
                            <button id="food">FOOD</button>
                            <button id="clothes">CLOTHES</button>
                            <button id="money">MONEY</button>
                        </div>
                </div>
            </div>
            <h1 id="place"></h1>
            <div class="table">
            </div>
            <div class="mapCont">
                <div id="map"></div>
            </div>
        </div>
    </div>
    <!-- prettier-ignore -->

    <script>(g => { var h, a, k, p = "The Google Maps JavaScript API", c = "google", l = "importLibrary", q = "__ib__", m = document, b = window; b = b[c] || (b[c] = {}); var d = b.maps || (b.maps = {}), r = new Set, e = new URLSearchParams, u = () => h || (h = new Promise(async (f, n) => { await (a = m.createElement("script")); e.set("libraries", [...r] + ""); for (k in g) e.set(k.replace(/[A-Z]/g, t => "_" + t[0].toLowerCase()), g[k]); e.set("callback", c + ".maps." + q); a.src = `https://maps.${c}apis.com/maps/api/js?` + e; d[q] = f; a.onerror = () => h = n(Error(p + " could not load.")); a.nonce = m.querySelector("script[nonce]")?.nonce || ""; m.head.append(a) })); d[l] ? console.warn(p + " only loads once. Ignoring:", g) : d[l] = (f, ...n) => r.add(f) && u().then(() => d[l](f, ...n)) })
            ({ key: "AIzaSyA4IGQAa3lWLh2jy1gRqEjybQ5aAqVDKcg", v: "weekly" });</script>


    <script type="module">
        //Google Maps




        //firebase setup start
        import { initializeApp } from "https://www.gstatic.com/firebasejs/10.7.1/firebase-app.js";


        const firebaseConfig = {
            apiKey: "AIzaSyBArOVoz0GEbbHzROw3CQy21xKzJZZBoyg",
            authDomain: "gdsc-solution-d963e.firebaseapp.com",
            databaseURL: "https://gdsc-solution-d963e-default-rtdb.asia-southeast1.firebasedatabase.app",
            projectId: "gdsc-solution-d963e",
            storageBucket: "gdsc-solution-d963e.appspot.com",
            messagingSenderId: "868921508827",
            appId: "1:868921508827:web:4fb017bdd70b8a4ad19dfe",
            measurementId: "G-Q8HQPBRYC8"
        };


        const app = initializeApp(firebaseConfig);

        import { getDatabase, ref, child, get, set, update, remove } from "https://www.gstatic.com/firebasejs/10.7.1/firebase-database.js";

        const db = getDatabase();
        // fire base setup end   



//------------------------------------------------------------------------------------------------>>




var type="Food,Clothes & Money";
        function showDropOptions(){
            document.querySelector(".optionsType").classList.toggle("inv");
        }
        function any(){
            type="Food,Clothes & Money";
            document.querySelector(".optionsType").classList.toggle("inv");
            document.getElementById("typeBtn").innerHTML="NONE";
        }
        function food(){
            type="Food";
            document.querySelector(".optionsType").classList.toggle("inv");
            document.getElementById("typeBtn").innerHTML="FOOD";
        }
        function clothes(){
            type="Clothes";
            document.querySelector(".optionsType").classList.toggle("inv");
            document.getElementById("typeBtn").innerHTML="CLOTHES";
        }
        function money(){
            type="Money";
            document.querySelector(".optionsType").classList.toggle("inv");
            document.getElementById("typeBtn").innerHTML="MONEY";
        }
        document.getElementById("typeBtn").addEventListener("click", showDropOptions);
        document.getElementById("food").addEventListener("click", food);
        document.getElementById("money").addEventListener("click", money);
        document.getElementById("clothes").addEventListener("click", clothes);
        document.getElementById("any").addEventListener("click", any);



        //------------------------------------------------------------------------------------------------------------------------------>>>>



        //to get location of user
        function showCity(position) {
            var lat = position.coords.latitude;
            var long = position.coords.longitude;
            console.log(lat, long);
            // Make a request to a Geocoding API (e.g. Google Maps Geocoding API)
            const url = `https://maps.googleapis.com/maps/api/geocode/json?latlng=${lat},${long}&key=AIzaSyAdQUa5-QKIL38-Hw6-Z9lN8AmfMEguFJU`;
            var city = "";
            fetch(url)
                .then((response) => response.json())
                .then((data) => {
                    // Parse the city name from the API response
                    console.log(data);
                    city = data.results[0].address_components.find((component) =>
                        component.types.includes("locality")
                    ).long_name;
                    var disTemp=10;
                    disTemp=document.getElementById("distanceMax").value;
                    var dis = 10;
                    if(disTemp!=10 && disTemp!=0){
                        alert("works");
                        dis=disTemp;
                    }
                    searchCityWithDistance(city, dis, lat, long);
                    console.log(city);
                    console.log(data[0]);
                })
                .catch((error) => console.log(error));
        }


        let SubmitBtn = document.getElementById("submit");

        const lula = (t, path) =>
            path.split(".").reduce((r, k) => r?.[k], t)

        function getData() {
            var city = document.getElementById("city").value;
            city = city.slice(0, 1).toUpperCase() + city.slice(1).toLowerCase();
            searchCity(city);
        }
        function searchCity(city) {
            document.querySelector(".table").innerHTML = "";
            const dbRef = ref(db);
            document.getElementById('place').innerHTML = city;
            get(child(dbRef, 'city/' + city)).then((snapshot) => {
                if (snapshot.exists()) {
                    for (var i = 1; i <= Object.keys(snapshot.val()).length; i++) {

                        var addr = lula(snapshot.val(), `id${i}.address`);
                        
                        console.log(addr);
                        if(lula(snapshot.val(), `id${i}.name`)!=undefined)
                        {   
                            if(type=="Food,Clothes & Money")
                                document.querySelector(".table").innerHTML += `
                                    <div class= "card">
                                        <h1><span class="start">Name:</span> ${lula(snapshot.val(), `id${i}.name`)}</h1>
                                        <h1><span class="start">Address:</span> ${lula(snapshot.val(), `id${i}.address`)}</h1>
                                        <h1><span class="start">Contact:</span> ${lula(snapshot.val(), `id${i}.contact`)}</h1>
                                        <h1><span class="start">Email:</span><a href="mailto:${lula(snapshot.val(), `id${i}.email`)}?subject = Feedback&body = Message" target="_blank"> ${lula(snapshot.val(), `id${i}.email`)}</a></h1>
                                        <h1><span class="start">Donation Type:</span> ${lula(snapshot.val(), `id${i}.type`)}</h1>
                                    </div>`;
                            else{
                                if(type.toLowerCase()==(lula(snapshot.val(), `id${i}.type`)).toLowerCase()){
                                    document.querySelector(".table").innerHTML += `
                                    <div class= "card">
                                        <h1><span class="start">Name:</span> ${lula(snapshot.val(), `id${i}.name`)}</h1>
                                        <h1><span class="start">Address:</span> ${lula(snapshot.val(), `id${i}.address`)}</h1>
                                        <h1><span class="start">Contact:</span> ${lula(snapshot.val(), `id${i}.contact`)}</h1>
                                        <h1><span class="start">Email:</span><a href="mailto:${lula(snapshot.val(), `id${i}.email`)}?subject = Feedback&body = Message" target="_blank"> ${lula(snapshot.val(), `id${i}.email`)}</a></h1>
                                        <h1><span class="start">Donation Type:</span> ${lula(snapshot.val(), `id${i}.type`)}</h1>
                                    </div>`;
                                }
                            }
                        }
                        else if(city==undefined || city==""){
                            alert("Enter city name");
                            break;
                        }
                        else if(i==1){
                            alert("No Data About the city");
                            break;
                        }
                    }
                    let map;

                async function initMap() {
                    const { Map } = await google.maps.importLibrary("maps");

                        map = new Map(document.getElementById("map"), {
                            center: { lat: Number(lula(snapshot.val(), `id${1}.latitude`)), lng:Number(lula(snapshot.val(), `id${1}.longitude`)) },
                            zoom: 10,

                        });
                        for (let i = 1; i <= Object.keys(snapshot.val()).length; i++) {
                            var lat = Number(lula(snapshot.val(), `id${i}.latitude`));
                            var long = Number(lula(snapshot.val(), `id${i}.longitude`));
                            console.log(lat, long);
                            new google.maps.Marker({
                                position: { lat: lat, lng: long },
                                map: map,
                                draggable: false,
                                animation: google.maps.Animation.DROP,

                            })
                        }

                    }

                    initMap();

                }
                else {
                    alert("No data available for this city");
                }
            })
                .catch((error) => {
                    alert("Error");
                    console.log("Error in searchCity");
                });
        }
        SubmitBtn.addEventListener("click", getData);

        const start = document.querySelector('#locate');

        start.addEventListener("click", () => {
            navigator.geolocation.getCurrentPosition(showCity)
        })

        function searchCityWithDistance(city, maxDis, lat, long) {
            document.getElementById('place').innerHTML = city;
            var dis = 0;
            document.querySelector(".table").innerHTML = "";
            const dbRef = ref(db);
            get(child(dbRef, 'city/' + city)).then((snapshot) => {
                console.log(snapshot.val());
                if (snapshot.exists()) {
                    for (var i = 1; i <= Object.keys(snapshot.val()).length; i++) {
                        console.log("Rec->->");
                        console.log(snapshot.val());
                        dis = getDistanceFromLatLonInKm(lat, long, lula(snapshot.val(), `id${i}.latitude`), lula(snapshot.val(), `id${i}.longitude`));
                        console.log(city);
                        console.log("DIS======" + dis);
                        if (dis <= maxDis) {
                            dis=Math.floor(dis*100)/100;
                            if(type=="Food,Clothes & Money"){
                                console.log(snapshot.val());
                                document.querySelector(".table").innerHTML += `
                                    <div class= "card">
                                        <h1><span class="start">Name:</span> ${lula(snapshot.val(), `id${i}.name`)}</h1>
                                        <h1><span class="start">Address:</span> ${lula(snapshot.val(), `id${i}.address`)}</h1>
                                        <h1><span class="start">Contact:</span> ${lula(snapshot.val(), `id${i}.contact`)}</h1>
                                        <h1><span class="start">Email:</span><a href="mailto:${lula(snapshot.val(), `id${i}.email`)}?subject = Feedback&body = Message" target="_blank"> ${lula(snapshot.val(), `id${i}.email`)}</a></h1>
                                        <h1><span class="start">Donation Type:</span> ${lula(snapshot.val(), `id${i}.type`)}</h1>
                                        <h1><span class="start">Distance:</span> ${dis} Km</h1>
                                    </div>`;
                                }
                                else{
                                    if((lula(snapshot.val(), `id${i}.type`)).toLowerCase()==type.toLowerCase()){
                                        console.log(snapshot.val());
                                        document.querySelector(".table").innerHTML += `
                                            <div class= "card">
                                                <h1><span class="start">Name:</span> ${lula(snapshot.val(), `id${i}.name`)}</h1>
                                                <h1><span class="start">Address:</span> ${lula(snapshot.val(), `id${i}.address`)}</h1>
                                                <h1><span class="start">Contact:</span> ${lula(snapshot.val(), `id${i}.contact`)}</h1>
                                                <h1><span class="start">Email:</span><a href="mailto:${lula(snapshot.val(), `id${i}.email`)}?subject = Feedback&body = Message" target="_blank"> ${lula(snapshot.val(), `id${i}.email`)}</a></h1>
                                                <h1><span class="start">Donation Type:</span> ${lula(snapshot.val(), `id${i}.type`)}</h1>
                                                <h1><span class="start">Distance:</span> ${dis}</h1>
                                            </div>`;
                                    }
                                }
                        } else {
                            if (i == 1 && lula(snapshot.val(), `id${i}.address`) != undefined) {
                                dis = Math.floor(dis * 100) / 100;
                                alert("No data in the given distance, closest available in " + dis + " km away");
                            }
                        }
                    }
                    async function initMap() {
                    const { Map } = await google.maps.importLibrary("maps");

                        map = new Map(document.getElementById("map"), {
                            center: { lat: Number(lula(snapshot.val(), `id${1}.latitude`)), lng:Number(lula(snapshot.val(), `id${1}.longitude`)) },
                            zoom: 10,

                        });
                        for (let i = 1; i <= Object.keys(snapshot.val()).length; i++) {
                            var lat = Number(lula(snapshot.val(), `id${i}.latitude`));
                            var long = Number(lula(snapshot.val(), `id${i}.longitude`));
                            console.log(lat, long);
                            new google.maps.Marker({
                                position: { lat: lat, lng: long },
                                map: map,
                                draggable: false,
                                animation: google.maps.Animation.DROP,
                            })
                        }

                    }

                    initMap();

                }
                else {
                    alert("No data available for this city");
                }
            })
                .catch((error) => {
                    alert("Error");
                    console.log("Error in searchCityWithDistance");
                });
        }

        //------------------------------------------------------------------------------------------>>




        //to calculate distance using latitudes and longitudes    

        function getDistanceFromLatLonInKm(lat1, lon1, lat2, lon2) {
            var R = 6371; // Radius of the earth in km
            var dLat = deg2rad(lat2 - lat1);  // deg2rad below
            var dLon = deg2rad(lon2 - lon1);
            var a =
                Math.sin(dLat / 2) * Math.sin(dLat / 2) +
                Math.cos(deg2rad(lat1)) * Math.cos(deg2rad(lat2)) *
                Math.sin(dLon / 2) * Math.sin(dLon / 2)
                ;
            var c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));
            var d = R * c; // Distance in km
            return d;
        }

        function deg2rad(deg) {
            return deg * (Math.PI / 180)
        }





    </script>

</body>

</html>
